on:
  push:
    branches: [ "main", "solaanan", "mehdi" ]
  pull_request:
    branches: [ "main", "solaanan", "mehdi" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Allow all steps to run even if one fails (optional)
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: apt-get update && apt-get install -y build-essential g++  # Example installation

    - name: Build ft_irc
      run: make  # Replace with your build script or compiler command

    - name: Upload ft_irc artifact (excluding Git objects)
      uses: actions/upload-artifact@v3
      with:
        name: ft_irc-artifact
        path: .  # Upload entire contents of ft_irc folder (excluding Git objects)
        exclude: '**/*.git/objects/**'  # Exclude Git objects directory

    - name: Build hamradroid
      working-directory: bot/  # Build within bot folder
      run: make  # Replace with your build script or compiler command

    - name: Upload hamradroid artifact
      uses: actions/upload-artifact@v3
      with:
        name: hamradroid-artifact
        path: bot/  # Upload entire folder containing the built executable

  run:  # Separate job for running executables
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    steps:
    - uses: actions/checkout@v3
    - name: Download ft_irc artifact
      uses: actions/download-artifact@v3
      with:
        name: ft_irc-artifact
        path: .  # Download to the root directory (ft_irc)

    - name: Run ft_irc
      run: ./ft_irc 1604 password  # Run downloaded executable (already in root)

    - name: Download hamradroid artifact
      uses: actions/download-artifact@v3
      with:
        name: hamradroid-artifact
        path: bot/  # Download folder to the same path

    - name: Run hamradroid
      run: cd bot && ./hamradroid  # Run downloaded executable
