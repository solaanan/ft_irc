name: C/C++ CI
run-name: ci-${{ github.actor }}-${{ github.event.name }}-${{ github.ref }}-branch-${{ github.sha }}

on:
  push:
    branches: [ "main", "solaanan", "mehdi" ]
  pull_request:
    branches: [ "main", "solaanan", "mehdi" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Allow all steps to run even if one fails (optional)
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential g++  # Example installation

    - name: Build ft_irc
      run: make  # Replace with your build script or compiler command

    - name: Create directory for binaries
      run: mkdir -p bin  # Create a directory named bin

    - name: Move ft_irc binary
      run: mv ./ft_irc bin/  # Assuming obj folder for build products

    - name: Build hamradroid
      working-directory: ./bot  # Build within bot folder
      run: make  # Replace with your build script or compiler command

    - name: Move hamradroid binary
      run: mv ./bot/hamradroid bin/  # Assuming obj folder for build products

    - name: Upload binaries artifact
      uses: actions/upload-artifact@v3
      with:
        name: binaries-artifact
        path: ./bin

  run:  # Separate job for running executables
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    steps:
    - uses: actions/checkout@v3
    - name: Download binaries artifact
      uses: actions/download-artifact@v3
      with:
        name: binaries-artifact
        path: .  # Download to the root directory (ft_irc)

    - name: Run ft_irc
      run: ./bin/ft_irc 1604 password  # Run downloaded executable (already in root)

    - name: Run hamradroid
      run: ./bin/hamradroid  # Run downloaded executable
